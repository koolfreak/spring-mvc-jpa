<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	    http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd">
	
	<context:component-scan base-package="org.springmvc.service.security, org.springmvc.web.controller"/>
    <mvc:annotation-driven/>
	<!--<bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping"/>
    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter"/>-->
    <!-- Map paths directly to view names without controller processing. Use the view-name attribute if necessary: by convention the view name equals the path without the leading slash -->
    <mvc:resources mapping="/css/**" location="/css/"/>
    <mvc:resources mapping="/js/**" location="/js/"/>
    <mvc:resources mapping="/images/**" location="/images/" />
    <mvc:view-controller path="/login" />
    <mvc:view-controller path="/logoutSuccess" />

	<bean id="templateResolver" class="org.thymeleaf.templateresolver.ServletContextTemplateResolver">
		<property name="prefix" value="/WEB-INF/html/" />
		<property name="suffix" value=".html" />
		<property name="templateMode" value="HTML5" />
		<property name="cacheable" value="false" />
	</bean>

	<bean id="templateEngine" class="org.thymeleaf.spring3.SpringTemplateEngine">
		<property name="templateResolver" ref="templateResolver" />
		<property name="additionalDialects">
			<set>
				<bean class="org.thymeleaf.extras.tiles2.dialect.TilesDialect" />
				<bean class="org.thymeleaf.extras.conditionalcomments.dialect.ConditionalCommentsDialect" />
				<bean class="org.thymeleaf.extras.springsecurity3.dialect.SpringSecurityDialect" />
				<bean class="com.github.dtrunk90.thymeleaf.jawr.dialect.JawrDialect" />
			</set>
		</property>
	</bean>

	<bean id="tilesViewResolver" class="org.thymeleaf.spring3.view.ThymeleafViewResolver">
		<property name="viewClass" value="org.thymeleaf.extras.tiles2.spring3.web.view.ThymeleafTilesView"/>
		<property name="templateEngine" ref="templateEngine" />
	</bean>

	<bean id="expressionParser" class="org.springframework.expression.spel.standard.SpelExpressionParser">
		<constructor-arg name="configuration">
			<bean class="org.springframework.expression.spel.SpelParserConfiguration">
				<constructor-arg name="autoGrowCollections" value="true" index="1"/>
				<constructor-arg name="autoGrowNullReferences" value="true" index="0"/>
			</bean>
		</constructor-arg>
	</bean>

	<bean id="tilesConfigurer" class="org.thymeleaf.extras.tiles2.spring3.web.configurer.ThymeleafTilesConfigurer">
		<property name="definitions">
			<list>
				<value>/WEB-INF/tiles/tiles-defs.xml</value>
			</list>
		</property>
	</bean>

    <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basename" value="messages" />
    </bean>

    <!-- Base Jawr config -->
    <bean abstract="true" id="jawrBase" class="net.jawr.web.servlet.JawrSpringController">
        <property name="configLocation" value="/jawr.properties" />
        <property name="configuration">
            <props>
                <prop key="jawr.debug.on">true</prop> <!-- set to true to initialize jawr to dev mode -->
                <prop key="jawr.gzip.on">false</prop> <!-- set to false to view indivual js imports in dev mode -->
            </props>
        </property>
    </bean>

</beans>